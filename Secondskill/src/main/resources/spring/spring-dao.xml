<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<!-- 配置整合Mybatis过程 -->
	<!-- 1：配置数据库相关参数 properties的属性通过：${url} -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!--2：数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<property name="driverClass" value="${driverClassName}" />
		<property name="jdbcUrl" value="${url}" />
		<property name="user" value="${username}" />
		<property name="password" value="${password}" />
		<!-- c3p0 连接池的私有属性 -->
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="10" />
		<!-- 关闭连接后不自动commit -->
		<property name="autoCommitOnClose" value="false" />
		<!-- 获取连接超时时间 -->
		<property name="checkoutTimeout" value="1000" />
		<!-- 当获取连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="2" />
	</bean>
	<!-- 约定大于配置 -->
	<!-- 3：配置SQLSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!--配置Mybatis全局配置文件：Mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 扫描entity包，使用别名 com.seckill.entity.Seckill->Seckill  包名+类名转换为类名即可以不使用全限定名-->
		<property name="typeAliasesPackage" value="com.seckill.entity" />
		<!-- 扫描sql配置文件：mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>
	<!-- 4:配置扫描DAO接口包 ，动态实现DAO接口并注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出扫描DAO接口包 -->
		<property name="basePackage" value="com.seckill.dao" />
	</bean>
	
	<!-- redisDao -->
	<bean id="redisDao" class="com.seckill.dao.cache.RedisDao">
		<constructor-arg index="0" value="127.0.0.1"/>
		<constructor-arg index="1" value="6379"/>
	</bean>
</beans>